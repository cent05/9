# -*- coding: utf-8 -*-
"""Ass9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oxwaEhiI_zmqD4P9I4bw_vF2OE_Y0gky
"""

import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from sklearn.metrics import classification_report
from sklearn.model_selection import train_test_split
from sklearn.base import ClassifierMixin 
from sklearn import svm

data=pd.read_csv('cell_samples.csv')
data.head()

data.shape

data.count()

data['Class'].value_counts()

benign=data[data['Class']==2][0:200]
malignant=data[data['Class']==4][0:200]
axes=benign.plot(kind='scatter',x='Clump',y='UnifSize',color='blue',label='Benign')
malignant.plot(kind='scatter',x='Clump',y='UnifSize',color='red',label='Malignant',ax=axes)

data.dtypes
data=data[pd.to_numeric(data['BareNuc'],errors='coerce').notnull()]
data['BareNuc']=data['BareNuc'].astype('int')
data.dtypes

data.columns
#remove first and last column
feature_data=data[['Clump', 'UnifSize', 'UnifShape', 'MargAdh', 'SingEpiSize',
       'BareNuc', 'BlandChrom', 'NormNucl', 'Mit']]
#independent variable
x=np.asarray(feature_data)
#dependent variable
y=np.asarray(data['Class'])
x[0:5]

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=4)
x_train.shape

classifier=svm.SVC(kernel='linear', gamma='auto',C=2)
classifier.fit(x_train,y_train)
y_predict=classifier.predict(x_test)

print(classification_report(y_test,y_predict))